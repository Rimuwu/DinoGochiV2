"""–§–∞–π–ª –¥–æ–ª–∂–µ–Ω –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–º, —á—Ç–æ–±—ã —Å—é–¥–∞ –ø–æ–ø–∞–¥–∞–ª–∏ —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã
"""
from telebot import types
from bot.exec import bot
from bot.modules.logs import log
from bot.modules.localization import t


@bot.callback_query_handler(func=lambda call: call.data.startswith('delete_message'))
async def delete_message(call: types.CallbackQuery):
    chatid = call.message.chat.id
    await bot.delete_message(chatid, call.message.id)
    await bot.answer_callback_query(call.id, "üóë")

@bot.callback_query_handler(func=lambda call: call.data.startswith(' '))
async def pass_h(call: types.CallbackQuery): pass

@bot.callback_query_handler(func=lambda call: True)
async def not_found(call: types.CallbackQuery):
    userid = call.from_user.id
    log(f'–ö–ª—é—á {call.data} –Ω–µ –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {userid}', 2, "CallbackQuery")

@bot.message_handler(is_authorized=False)
async def not_authorized(message: types.Message):
    lang = message.from_user.language_code
    chatid = message.chat.id

    text = t('not_authorized', lang)
    await bot.send_message(chatid, text)

@bot.message_handler()
async def not_found_text(message: types.Message):
    lang = message.from_user.language_code
    chatid = message.chat.id

    text = t('not_found_key', lang)
    await bot.send_message(chatid, text)